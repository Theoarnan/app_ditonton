// Mocks generated by Mockito 5.4.1 from annotations
// in tvseries/test/test_helper/test_helper_tvseries.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i10;
import 'dart:typed_data' as _i11;
import 'dart:ui' as _i9;

import 'package:core/core.dart' as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tvseries/tvseries.dart' as _i3;
import 'package:watchlist/domain/repositories/watchlist_repository.dart' as _i4;
import 'package:watchlist/watchlist.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailModel_1 extends _i1.SmartFake implements _i3.TvDetailModel {
  _FakeTvDetailModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonDetailModel_2 extends _i1.SmartFake
    implements _i3.SeasonDetailModel {
  _FakeSeasonDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvRepository_3 extends _i1.SmartFake implements _i3.TvRepository {
  _FakeTvRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchlistRepository_4 extends _i1.SmartFake
    implements _i4.WatchlistRepository {
  _FakeWatchlistRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnTheAirTv_5 extends _i1.SmartFake implements _i3.GetOnTheAirTv {
  _FakeGetOnTheAirTv_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPopularTv_6 extends _i1.SmartFake implements _i3.GetPopularTv {
  _FakeGetPopularTv_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTopRatedTv_7 extends _i1.SmartFake implements _i3.GetTopRatedTv {
  _FakeGetTopRatedTv_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetSeasonDetail_8 extends _i1.SmartFake
    implements _i3.GetSeasonDetail {
  _FakeGetSeasonDetail_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeasonDetail_9 extends _i1.SmartFake implements _i3.SeasonDetail {
  _FakeSeasonDetail_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvDetail_10 extends _i1.SmartFake implements _i3.GetTvDetail {
  _FakeGetTvDetail_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvRecommendations_11 extends _i1.SmartFake
    implements _i3.GetTvRecommendations {
  _FakeGetTvRecommendations_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatus_12 extends _i1.SmartFake
    implements _i5.GetWatchListStatus {
  _FakeGetWatchListStatus_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTv_13 extends _i1.SmartFake
    implements _i5.SaveWatchlistTv {
  _FakeSaveWatchlistTv_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTv_14 extends _i1.SmartFake
    implements _i5.RemoveWatchlistTv {
  _FakeRemoveWatchlistTv_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetail_15 extends _i1.SmartFake implements _i3.TvDetail {
  _FakeTvDetail_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_16 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_17 extends _i1.SmartFake
    implements _i6.StreamedResponse {
  _FakeStreamedResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i3.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> getOnTheAirTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnTheAirTv,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getOnTheAirTv,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> getTopRatedTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getTopRatedTv,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> getPopularTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getPopularTv,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i3.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i3.TvDetail>>.value(
            _FakeEither_0<_i8.Failure, _i3.TvDetail>(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i3.TvDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #getTvRecommendations,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> searchTv(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #searchTv,
            [query],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i3.SeasonDetail>> getSeasonDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeasonDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i3.SeasonDetail>>.value(
                _FakeEither_0<_i8.Failure, _i3.SeasonDetail>(
          this,
          Invocation.method(
            #getSeasonDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i3.SeasonDetail>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i3.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i3.TvModel>> getOnTheAirTv() => (super.noSuchMethod(
        Invocation.method(
          #getOnTheAirTv,
          [],
        ),
        returnValue: _i7.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]),
      ) as _i7.Future<List<_i3.TvModel>>);
  @override
  _i7.Future<List<_i3.TvModel>> getTopRatedTv() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [],
        ),
        returnValue: _i7.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]),
      ) as _i7.Future<List<_i3.TvModel>>);
  @override
  _i7.Future<List<_i3.TvModel>> getPopularTv() => (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [],
        ),
        returnValue: _i7.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]),
      ) as _i7.Future<List<_i3.TvModel>>);
  @override
  _i7.Future<_i3.TvDetailModel> getTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue: _i7.Future<_i3.TvDetailModel>.value(_FakeTvDetailModel_1(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.TvDetailModel>);
  @override
  _i7.Future<List<_i3.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i7.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]),
      ) as _i7.Future<List<_i3.TvModel>>);
  @override
  _i7.Future<List<_i3.TvModel>> searchTv(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i7.Future<List<_i3.TvModel>>.value(<_i3.TvModel>[]),
      ) as _i7.Future<List<_i3.TvModel>>);
  @override
  _i7.Future<_i3.SeasonDetailModel> getSeasonsDetail(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeasonsDetail,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i7.Future<_i3.SeasonDetailModel>.value(_FakeSeasonDetailModel_2(
          this,
          Invocation.method(
            #getSeasonsDetail,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i7.Future<_i3.SeasonDetailModel>);
}

/// A class which mocks [GetOnTheAirTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTv extends _i1.Mock implements _i3.GetOnTheAirTv {
  MockGetOnTheAirTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
}

/// A class which mocks [GetPopularTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTv extends _i1.Mock implements _i3.GetPopularTv {
  MockGetPopularTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
}

/// A class which mocks [GetSeasonDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeasonDetail extends _i1.Mock implements _i3.GetSeasonDetail {
  MockGetSeasonDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i3.SeasonDetail>> execute(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i3.SeasonDetail>>.value(
                _FakeEither_0<_i8.Failure, _i3.SeasonDetail>(
          this,
          Invocation.method(
            #execute,
            [
              id,
              seasonNumber,
            ],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i3.SeasonDetail>>);
}

/// A class which mocks [GetTopRatedTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTv extends _i1.Mock implements _i3.GetTopRatedTv {
  MockGetTopRatedTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i3.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i3.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i3.TvDetail>>.value(
            _FakeEither_0<_i8.Failure, _i3.TvDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i3.TvDetail>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i3.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.TvRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i3.Tv>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i3.Tv>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i5.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeWatchlistRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.WatchlistRepository);
  @override
  _i7.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [SaveWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTv extends _i1.Mock implements _i5.SaveWatchlistTv {
  MockSaveWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeWatchlistRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.WatchlistRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> execute(_i3.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTv extends _i1.Mock implements _i5.RemoveWatchlistTv {
  MockRemoveWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.WatchlistRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeWatchlistRepository_4(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.WatchlistRepository);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> execute(_i3.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tv],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tv],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);
}

/// A class which mocks [TvListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListNotifier extends _i1.Mock implements _i3.TvListNotifier {
  MockTvListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetOnTheAirTv get getOnTheAirTv => (super.noSuchMethod(
        Invocation.getter(#getOnTheAirTv),
        returnValue: _FakeGetOnTheAirTv_5(
          this,
          Invocation.getter(#getOnTheAirTv),
        ),
      ) as _i3.GetOnTheAirTv);
  @override
  _i3.GetPopularTv get getPopularTv => (super.noSuchMethod(
        Invocation.getter(#getPopularTv),
        returnValue: _FakeGetPopularTv_6(
          this,
          Invocation.getter(#getPopularTv),
        ),
      ) as _i3.GetPopularTv);
  @override
  _i3.GetTopRatedTv get getTopRatedTv => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTv),
        returnValue: _FakeGetTopRatedTv_7(
          this,
          Invocation.getter(#getTopRatedTv),
        ),
      ) as _i3.GetTopRatedTv);
  @override
  _i8.RequestState get onTheAirState => (super.noSuchMethod(
        Invocation.getter(#onTheAirState),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  List<_i3.Tv> get onTheAirTv => (super.noSuchMethod(
        Invocation.getter(#onTheAirTv),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  List<_i3.Tv> get popularTv => (super.noSuchMethod(
        Invocation.getter(#popularTv),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  _i8.RequestState get popularTvState => (super.noSuchMethod(
        Invocation.getter(#popularTvState),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  List<_i3.Tv> get topRatedTv => (super.noSuchMethod(
        Invocation.getter(#topRatedTv),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  _i8.RequestState get topRatedTvState => (super.noSuchMethod(
        Invocation.getter(#topRatedTvState),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> fetchOnTheAirTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchOnTheAirTv,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> fetchPopularTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularTv,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> fetchTopRatedTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTv,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OnTheAirTvNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnTheAirTvNotifier extends _i1.Mock
    implements _i3.OnTheAirTvNotifier {
  MockOnTheAirTvNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetOnTheAirTv get getOnTheAirTv => (super.noSuchMethod(
        Invocation.getter(#getOnTheAirTv),
        returnValue: _FakeGetOnTheAirTv_5(
          this,
          Invocation.getter(#getOnTheAirTv),
        ),
      ) as _i3.GetOnTheAirTv);
  @override
  _i8.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  List<_i3.Tv> get tv => (super.noSuchMethod(
        Invocation.getter(#tv),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> fetchOnTheAirTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchOnTheAirTv,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PopularTvNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvNotifier extends _i1.Mock implements _i3.PopularTvNotifier {
  MockPopularTvNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetPopularTv get getPopularTv => (super.noSuchMethod(
        Invocation.getter(#getPopularTv),
        returnValue: _FakeGetPopularTv_6(
          this,
          Invocation.getter(#getPopularTv),
        ),
      ) as _i3.GetPopularTv);
  @override
  _i8.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  List<_i3.Tv> get tv => (super.noSuchMethod(
        Invocation.getter(#tv),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> fetchPopularTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchPopularTv,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SeasonDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeasonDetailNotifier extends _i1.Mock
    implements _i3.SeasonDetailNotifier {
  MockSeasonDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetSeasonDetail get getSeasonDetail => (super.noSuchMethod(
        Invocation.getter(#getSeasonDetail),
        returnValue: _FakeGetSeasonDetail_8(
          this,
          Invocation.getter(#getSeasonDetail),
        ),
      ) as _i3.GetSeasonDetail);
  @override
  _i3.SeasonDetail get seasonDetail => (super.noSuchMethod(
        Invocation.getter(#seasonDetail),
        returnValue: _FakeSeasonDetail_9(
          this,
          Invocation.getter(#seasonDetail),
        ),
      ) as _i3.SeasonDetail);
  @override
  _i8.RequestState get seasonState => (super.noSuchMethod(
        Invocation.getter(#seasonState),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> fetchSeasonDetail({
    required int? id,
    required int? seasonNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSeasonDetail,
          [],
          {
            #id: id,
            #seasonNumber: seasonNumber,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TopRatedTvNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvNotifier extends _i1.Mock
    implements _i3.TopRatedTvNotifier {
  MockTopRatedTvNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetTopRatedTv get getTopRatedTv => (super.noSuchMethod(
        Invocation.getter(#getTopRatedTv),
        returnValue: _FakeGetTopRatedTv_7(
          this,
          Invocation.getter(#getTopRatedTv),
        ),
      ) as _i3.GetTopRatedTv);
  @override
  _i8.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  List<_i3.Tv> get tv => (super.noSuchMethod(
        Invocation.getter(#tv),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> fetchTopRatedTv() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedTv,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i3.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetTvDetail get getTvDetail => (super.noSuchMethod(
        Invocation.getter(#getTvDetail),
        returnValue: _FakeGetTvDetail_10(
          this,
          Invocation.getter(#getTvDetail),
        ),
      ) as _i3.GetTvDetail);
  @override
  _i3.GetTvRecommendations get getTvRecommendations => (super.noSuchMethod(
        Invocation.getter(#getTvRecommendations),
        returnValue: _FakeGetTvRecommendations_11(
          this,
          Invocation.getter(#getTvRecommendations),
        ),
      ) as _i3.GetTvRecommendations);
  @override
  _i5.GetWatchListStatus get getWatchListStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListStatus),
        returnValue: _FakeGetWatchListStatus_12(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
      ) as _i5.GetWatchListStatus);
  @override
  _i5.SaveWatchlistTv get saveWatchlistTv => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTv),
        returnValue: _FakeSaveWatchlistTv_13(
          this,
          Invocation.getter(#saveWatchlistTv),
        ),
      ) as _i5.SaveWatchlistTv);
  @override
  _i5.RemoveWatchlistTv get removeWatchlistTv => (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTv),
        returnValue: _FakeRemoveWatchlistTv_14(
          this,
          Invocation.getter(#removeWatchlistTv),
        ),
      ) as _i5.RemoveWatchlistTv);
  @override
  _i3.TvDetail get tvDetail => (super.noSuchMethod(
        Invocation.getter(#tvDetail),
        returnValue: _FakeTvDetail_15(
          this,
          Invocation.getter(#tvDetail),
        ),
      ) as _i3.TvDetail);
  @override
  _i8.RequestState get tvState => (super.noSuchMethod(
        Invocation.getter(#tvState),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  List<_i3.Tv> get tvRecommendations => (super.noSuchMethod(
        Invocation.getter(#tvRecommendations),
        returnValue: <_i3.Tv>[],
      ) as List<_i3.Tv>);
  @override
  _i8.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i8.RequestState.empty,
      ) as _i8.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> fetchTvDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvDetail,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> addWatchlist(_i3.TvDetail? tv) => (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [tv],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> removeFromWatchlist(_i3.TvDetail? tv) => (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tv],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i6.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i6.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i6.Response>.value(_FakeResponse_16(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i6.Response>.value(_FakeResponse_16(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i6.Response>.value(_FakeResponse_16(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i6.Response>.value(_FakeResponse_16(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i6.Response>.value(_FakeResponse_16(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i6.Response>);
  @override
  _i7.Future<_i6.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i10.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i6.Response>.value(_FakeResponse_16(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i6.Response>);
  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
      ) as _i7.Future<_i11.Uint8List>);
  @override
  _i7.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_17(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
